[{"categories":null,"contents":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","date":"January 1, 0001","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/notes/go/basic/introduction/","summary":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","tags":null,"title":"Introduction"},{"categories":null,"contents":" Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\nType Conversion i := 2 f := float64(i) u := uint(i) Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;) ","date":"January 1, 0001","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.","tags":null,"title":"Basic Types"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() } ","date":"January 1, 0001","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Jack\u0026#34;,\u0026#34;John\u0026#34;,\u0026#34;Jones\u0026#34;} for i, val := range entry { fmt.","tags":null,"title":"Flow Control"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","date":"January 1, 0001","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/notes/go/advanced/files/","summary":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","tags":null,"title":"File Manipulation"},{"categories":null,"contents":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/notes/bash/basic/","summary":" Variable NAME=\u0026#34;John\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"Bash Variables"},{"categories":null,"contents":"Introduction After a 6-hour lecture introducing Human computer Interface, our first homework was to find objects illustrating some concepts in our real life.\nAffordances def affordance\nex : one good affordance ex : one bad affordance how could i fix it ?\nGestalt Laws ","date":"June 8, 2020","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/posts/hci/affordance/","summary":"Introduction After a 6-hour lecture introducing Human computer Interface, our first homework was to find objects illustrating some concepts in our real life.\nAffordances def affordance\nex : one good affordance ex : one bad affordance how could i fix it ?\nGestalt Laws ","tags":null,"title":"Affordance in daily life"},{"categories":null,"contents":"article sub ","date":"June 8, 2020","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/posts/unity/unity-project/article-sub/","summary":"article sub ","tags":null,"title":"Article Sub"},{"categories":null,"contents":"As a first assigment of Human Computer Interface, we had to create a Blog to showcase the work we will do during our master. I created my website using Hugo, a fast and modern static site generator.\nblog author.yaml\nHugo installation\nI downloaded a hugo theme https://themes.gohugo.io\ndeploy ","date":"June 8, 2020","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/posts/hci/blog-creation/","summary":"As a first assigment of Human Computer Interface, we had to create a Blog to showcase the work we will do during our master. I created my website using Hugo, a fast and modern static site generator.\nblog author.yaml\nHugo installation\nI downloaded a hugo theme https://themes.gohugo.io\ndeploy ","tags":null,"title":"Blog Set Up"},{"categories":["blog"],"contents":"","date":"June 8, 2020","hero":"/melanie_bregou.github.io/posts/introduction/hero.svg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/posts/introduction/","summary":"","tags":["Introduction","Blog"],"title":"Introduction"},{"categories":["sub"],"contents":" title: \u0026ldquo;Rich Content\u0026rdquo; date: 2020-06-08T08:06:25+06:00 description: Sample post with multiple images, embedded video ect. menu: sidebar: name: Rich Content identifier: rich-content parent: sub weight: 10 hero: images/forest.jpg tags: [\u0026ldquo;Markdown\u0026rdquo;,\u0026ldquo;Content Organization\u0026rdquo;,\u0026ldquo;Multi-lingual\u0026rdquo;] categories: [\u0026ldquo;Basic\u0026rdquo;] This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest ðŸ¦‰ pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 YouTube Video Sample Vimeo Video Sample ","date":"June 8, 2020","hero":"/melanie_bregou.github.io/images/default-hero.jpg","permalink":"https://MelanieBrg.github.io/melanie_bregou.github.io/posts/unity/unity-project/rich-content/","summary":"title: \u0026ldquo;Rich Content\u0026rdquo; date: 2020-06-08T08:06:25+06:00 description: Sample post with multiple images, embedded video ect. menu: sidebar: name: Rich Content identifier: rich-content parent: sub weight: 10 hero: images/forest.jpg tags: [\u0026ldquo;Markdown\u0026rdquo;,\u0026ldquo;Content Organization\u0026rdquo;,\u0026ldquo;Multi-lingual\u0026rdquo;] categories: [\u0026ldquo;Basic\u0026rdquo;] This sample post tests the followings:\nCategory, sub-category nesting in the sidebar. Hero image and other images are in images folder inside this post directory. Different media rendering like image, tweet, YouTube video, Vimeo video etc. Image Sample Tweet Sample Owl bet you\u0026#39;ll lose this staring contest ðŸ¦‰ pic.","tags":["rich"],"title":"Rich content"}]